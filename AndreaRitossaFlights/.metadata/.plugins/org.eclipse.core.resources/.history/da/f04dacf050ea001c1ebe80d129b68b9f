package flightTracker.persistence;

import java.io.BufferedReader;
import java.io.IOException;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.List;
import java.util.StringTokenizer;

import flightTracker.model.Flight;
import flightTracker.model.FlightPos;

public class MyFlightReader implements FlightReader {

//	UTC;Position;Altitude;Speed;Direction
//	2019-05-10T10:54:39Z;45.661972,8.726303;1975;183;356
	private DateTimeFormatter dtf = DateTimeFormatter.ofLocalizedDateTime(dateStyle, timeStyle);
	
	@Override
	public Flight readFlight(String id, BufferedReader reader) throws IOException, BadFileFormatException {
		if (id == null|| id.equals("") || reader == null)
			throw new IllegalArgumentException("nullable input");
		String line = reader.readLine();
		StringTokenizer stk = new StringTokenizer(line,";");
		if (!(stk.nextToken().equals("UTC")
				&& stk.nextToken().equals("Position")
				&& stk.nextToken().equals("Altitude")
				&& stk.nextToken().equals("Speed")
				&& stk.nextToken().equals("Direction")
				)) {
			throw new BadFileFormatException("Not good first line");
		}
		List<FlightPos> tracks = new ArrayList<>();
		
		while((line = reader.readLine())!= null) {
			stk = new StringTokenizer(line, ";");
			
		}
		
		return new Flight(id, tracks);
	}
	
	private void validate() {
		
	}

}
