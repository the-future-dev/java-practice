package minesweeper.model;

import java.util.Random;

public class RealMineField extends MineField {
	
	private int mines = 0;
	
	private int calcAdjacentMines(int a, int b) {
		int numBombs = 0;
		if (a == getSize()) {
			
		}
		if (getCell(a-1, b-1).getType().equals(CellType.MINE)) {
			numBombs++;
		}
		return numBombs;
	}
	
	public RealMineField() {
		this(10);
	}
	
	public RealMineField(int size) {
		super(size);
		init();
	}
	
	public RealMineField(int size, int nMine) {
		super(size);
		this.mines = nMine;
		init();
	}
	
	public int getMinesNumber() {
		return this.mines;
	}
	
	@Override
	protected void init() {
		if (mines == 0) {
			throw new Error("no bro"); 
		}
		Random rGenerator = new Random();
		Cell[] bombs = new Cell[mines];
		for (int i = 0; i < mines; i++) {
			boolean done;
			do {
				int x = rGenerator.nextInt(getSize());
				int y = rGenerator.nextInt(getSize());
				if (this.getCell(x, y) != null) {
					this.setCell(x, y, new Cell(CellType.MINE));
					done = true;
				} else {
					done = false;
				}
			} while(!done);
		}
		
		for (int i = 0; i<getSize(); i++) {
			for (int j = 0; j< getSize(); j++) {
				if (getCell(i, j).equals(null)) {
					this.setCell(i, j, new Cell(CellType.NUM, calcAdjacentMines(i, j)));
				}
			}
		}
	}

}
